"use client"; 

import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from './Providers';
import { store } from "./redux/store";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Providers store = {store} >
          {children}
        </Providers>
      </body>
    </html>
  );
}
































//  -----------------------------  Extra code ------------------------------------

// "use client";

// import { Box, Paper, Typography } from "@mui/material";
// import dynamic from "next/dynamic";
// import React, { useState } from "react";

// const Chart = dynamic(() => import("react-apexcharts"), { ssr: false });

// export default function chart() {
//   const dataLength = 100;
//   const visiblePoints = 50;

//   const [chartData] = useState({
//     series: [
//       {
//         name: "Sales",
//         data: Array.from({ length: dataLength }, () =>
//           Math.floor(Math.random() * 200 + 1)
//         ),
//       },
//     ],
//       options: {
//         chart: {
//           height: 550,
//           type: "line",
//           toolbar: { show: false },
//           zoom: { enabled: false },
//         },
//         stroke: { curve: "smooth" },
//         grid: {
//           borderColor: "#ccc",
//           borderDashArray: 5, 
//           row: {
//             colors: ["transparent", "transparent"],
//             opacity: 0.5,
//           },
//           column: {
//             colors: ["transparent", "transparent"],
//             opacity: 0.5,
//           },
//         },
//         xaxis: {
//           categories: Array.from({ length: dataLength }, (_, i) => `Day ${i + 1}`),
//           labels: { rotate: -45, style: { fontSize: "12px" } },
//           tickAmount: visiblePoints,
//           min: 0,
//           max: visiblePoints - 1,
//         },
//         yaxis: {
//           title: { text: "Sales" },
//         },
//         title: {
//           text: "100 Data Points Chart with Dashed Grid",
//           align: "left",
//         },
//         dataLabels: { enabled: false },
//         tooltip: { enabled: true },
//       },
//     width: dataLength * 60,
//   });

//   return (
//     <>
//       {/* Header */}
//       <Box
//         sx={{
//           display: "flex",
//           width: "100%",
//           justifyContent: "center",
//           alignItems: "center",
//           height: "200px",
//           bgcolor: "#1e7810ff",
//           p: 2,
//         }}
//       >
//         <Paper
//           elevation={3}
//           sx={{
//             p: 3,
//             width: "100%",
//             maxWidth: 600,
//             textAlign: "center",
//             borderRadius: 2,
//           }}
//         >
//           <Typography variant="h6" gutterBottom>
//             This is test chart/graph
//           </Typography>
//         </Paper>
//       </Box>

//       {/* Chart with hidden scrollbar */}
//       <Box
//         sx={{
//           overflowX: "auto", // enables horizontal scrolling
//           width: "100%",
//           msOverflowStyle: "none", // IE & Edge
//           scrollbarWidth: "none", // Firefox
//           "&::-webkit-scrollbar": {
//             display: "none", // Chrome, Safari, Opera
//           },
//         }}
//       >
//         <Box sx={{ width: `${dataLength * 60}px` }}>
//           <Chart
//             options={chartData.options}
//             series={chartData.series}
//             type="line"
//             height={550}
//             width={dataLength * 60}
//           />
//         </Box>
//       </Box>
//     </>
//   );
// }













// "use client";

// import React, { useState, useMemo, useEffect } from "react";
// import dynamic from "next/dynamic";
// import {
//   Box, Paper, Typography, Card, CardContent, IconButton,
//   Chip, Stack, useTheme, Skeleton
// } from "@mui/material";
// import { Refresh, ZoomIn, ZoomOut, FilterList } from "@mui/icons-material";

// const Chart = dynamic(() => import("react-apexcharts"), { ssr: false });

// export default function EnhancedChart() {
//   const theme = useTheme();
//   const dataLength = 100;
//   const visiblePoints = 50;

//   // zoom / refresh state (refreshKey triggers regeneration)
//   const [zoomLevel, setZoomLevel] = useState(1);
//   const [refreshKey, setRefreshKey] = useState(0);

//   // CLIENT-ONLY data state: start as `null` so server and initial client render match
//   const [clientData, setClientData] = useState(null);

//   // Generate data on the client only (runs on mount and when refreshKey changes)
//   useEffect(() => {
//     const newData = Array.from({ length: dataLength }, () => Math.floor(Math.random() * 200 + 1));
//     setClientData(newData);
//   }, [refreshKey, dataLength]);

//   // Build chart config from clientData. If data is null show placeholders / empty series.
//   const chartData = useMemo(() => {
//     if (!clientData) {
//       // initial placeholder config (no data yet)
//       return {
//         series: [{ name: "Sales", data: [] }],
//         stats: { max: "—", min: "—", avg: "—" },
//         options: {
//           chart: { height: 450, type: "line", toolbar: { show: false }, zoom: { enabled: false }, animations: { enabled: true }, foreColor: theme.palette.text.secondary },
//           stroke: { curve: "smooth", width: 3, colors: [theme.palette.primary.main] },
//           fill: { type: "gradient", gradient: { shade: "dark", type: "vertical", shadeIntensity: 0.5, gradientToColors: [theme.palette.primary.light], inverseColors: false, opacityFrom: 0.3, opacityTo: 0.1 } },
//           grid: { borderColor: theme.palette.divider, strokeDashArray: 3, row: { colors: ["transparent", "transparent"], opacity: 0.2 }, column: { colors: ["transparent", "transparent"], opacity: 0.2 }, padding: { top: 10, right: 20, bottom: 10, left: 20 } },
//           xaxis: { categories: Array.from({ length: dataLength }, (_, i) => `Day ${i + 1}`), labels: { rotate: -45, style: { fontSize: "11px", colors: theme.palette.text.secondary } }, tickAmount: visiblePoints, min: 0, max: visiblePoints - 1, axisBorder: { show: true, color: theme.palette.divider } },
//           yaxis: { title: { text: "Sales Units", style: { color: theme.palette.text.secondary } }, labels: { style: { colors: theme.palette.text.secondary } } },
//           title: { text: "Sales Performance Analytics", align: "left", style: { fontSize: "20px", fontWeight: "600", color: theme.palette.text.primary }, margin: 20 },
//           // dataLabels: { enabled: false },
//           // tooltip: { enabled: true, theme: theme.palette.mode, style: { fontSize: '12px' }, x: { show: true } },
//           // markers: { size: 4, strokeColors: theme.palette.primary.main, strokeWidth: 2, hover: { size: 6 } },
//         },
//         width: dataLength * 60 * zoomLevel,
//       };
//     }

//     // when we have clientData, compute stats normally
//     const data = clientData;
//     console.log("---------------------");
    
//     console.log("values of data is", data);
    
//     const maxValue = Math.max(...data);
//     console.log("max value is:", maxValue);
    
//     const minValue = Math.min(...data);
//     console.log("min value", minValue);
    
//     const avgValue = Math.round(data.reduce((a, b) => a + b, 0) / data.length);
//     console.log("avg values:", avgValue);
    

//     return {
//       series: [{ name: "Sales", data }],
//       stats: { max: maxValue, min: minValue, avg: avgValue },
//       options: {
//         chart: { height: 450, type: "line", toolbar: { show: false }, zoom: { enabled: false }, animations: { enabled: true, easing: 'easeinout', speed: 800 }, foreColor: theme.palette.text.secondary },
//         stroke: { curve: "smooth", width: 3, colors: [theme.palette.primary.main] },
//         fill: { type: "gradient", gradient: { shade: "dark", type: "vertical", shadeIntensity: 0.5, gradientToColors: [theme.palette.primary.light], inverseColors: false, opacityFrom: 0.3, opacityTo: 0.1 } },
//         grid: { borderColor: theme.palette.divider, strokeDashArray: 3, row: { colors: ["transparent", "transparent"], opacity: 0.2 }, column: { colors: ["transparent", "transparent"], opacity: 0.2 }, padding: { top: 10, right: 20, bottom: 10, left: 20 } },
//         xaxis: { categories: Array.from({ length: dataLength }, (_, i) => `Day ${i + 1}`), labels: { rotate: -45, style: { fontSize: "11px", colors: theme.palette.text.secondary } }, tickAmount: visiblePoints, min: 0, max: visiblePoints - 1, axisBorder: { show: true, color: theme.palette.divider } },
//         yaxis: { title: { text: "Sales Units", style: { color: theme.palette.text.secondary } }, labels: { style: { colors: theme.palette.text.secondary } } },
//         title: { text: "Sales Performance Analytics", align: "left", style: { fontSize: "20px", fontWeight: "600", color: theme.palette.text.primary }, margin: 20 },
//         dataLabels: { enabled: false },
//         tooltip: { enabled: true, theme: theme.palette.mode, style: { fontSize: '12px' }, x: { show: true, format: 'dd MMM yyyy' } },
//         markers: { size: 4, strokeColors: theme.palette.primary.main, strokeWidth: 2, hover: { size: 6 } },
//       },
//       width: dataLength * 60 * zoomLevel,
//     };
//   }, [clientData, zoomLevel, theme, dataLength, visiblePoints]);

//   // Handlers
//   const handleRefresh = () => setRefreshKey(prev => prev + 1);
//   const handleZoomIn = () => setZoomLevel(prev => Math.min(prev + 0.25, 2));
//   const handleZoomOut = () => setZoomLevel(prev => Math.max(prev - 0.25, 0.5));

//   return (
//     <Box sx={{ minHeight: "100vh", background: `linear-gradient(135deg, ${theme.palette.background.default} 0%, ${theme.palette.background.paper} 100%)`, p: { xs: 1, sm: 3 } }}>
//       {/* Header */}
//       <Box sx={{ display: "flex", justifyContent: "center", alignItems: "center", minHeight: "280px", background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`, borderRadius: 3, mb: 4, p: 3, position: 'relative', overflow: 'hidden', '&::before': { content: '""', position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, background: 'radial-gradient(circle at top right, rgba(255,255,255,0.1) 0%, transparent 50%)' } }}>
//         <Paper elevation={8} sx={{ p: 4, width: "100%", maxWidth: 800, textAlign: "center", borderRadius: 4, background: 'rgba(255, 255, 255, 0.95)', backdropFilter: 'blur(10px)', border: '1px solid rgba(255, 255, 255, 0.2)' }}>
//           <Typography variant="h4" gutterBottom sx={{ fontWeight: "700", background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`, backgroundClip: 'text', WebkitBackgroundClip: 'text', color: 'transparent', mb: 2 }}>
//             Advanced Analytics Dashboard
//           </Typography>
//           <Typography variant="h6" color="text.secondary" sx={{ mb: 3 }}>Real-time Sales Performance Metrics & Insights</Typography>

//           <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} justifyContent="center">
//             <Card sx={{ minWidth: 120, background: theme.palette.success.light }}>
//               <CardContent sx={{ textAlign: 'center', p: 2 }}>
//                 {clientData ? (
//                   <Typography variant="h6" color="success.dark">{chartData.stats.max}</Typography>
//                 ) : (
//                   <Skeleton variant="text" width={60} />
//                 )}
//                 <Typography variant="caption" color="success.dark">Peak Sales</Typography>
//               </CardContent>
//             </Card>

//             <Card sx={{ minWidth: 120, background: theme.palette.info.light }}>
//               <CardContent sx={{ textAlign: 'center', p: 2 }}>
//                 {clientData ? (
//                   <Typography variant="h6" color="info.dark">{chartData.stats.avg}</Typography>
//                 ) : (
//                   <Skeleton variant="text" width={40} />
//                 )}
//                 <Typography variant="caption" color="info.dark">Average</Typography>
//               </CardContent>
//             </Card>

//             <Card sx={{ minWidth: 120, background: theme.palette.warning.light }}>
//               <CardContent sx={{ textAlign: 'center', p: 2 }}>
//                 {clientData ? (
//                   <Typography variant="h6" color="warning.dark">{chartData.stats.min}</Typography>
//                 ) : (
//                   <Skeleton variant="text" width={40} />
//                 )}
//                 <Typography variant="caption" color="warning.dark">Lowest</Typography>
//               </CardContent>
//             </Card>
//           </Stack>
//         </Paper>
//       </Box>

//       {/* Controls */}
//       <Paper elevation={2} sx={{ p: 2, mb: 3, borderRadius: 3 }}>
//         <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', flexWrap: 'wrap', gap: 2 }}>
//           <Typography variant="h6" sx={{ fontWeight: 600 }}>Sales Trend Analysis</Typography>
//           <Stack direction="row" spacing={1} alignItems="center">
//             <Chip icon={<FilterList />} label="Last 100 Days" variant="outlined" size="small" />
//             <IconButton onClick={handleZoomOut} size="small" color="primary"><ZoomOut /></IconButton>
//             <Typography variant="body2" sx={{ minWidth: 60, textAlign: 'center' }}>{Math.round(zoomLevel * 100)}%</Typography>
//             <IconButton onClick={handleZoomIn} size="small" color="primary"><ZoomIn /></IconButton>
//             <IconButton onClick={handleRefresh} size="small" color="primary"><Refresh /></IconButton>
//           </Stack>
//         </Box>
//       </Paper>

//       {/* Chart */}
//       <Paper elevation={4} sx={{ borderRadius: 3, overflow: 'hidden', background: theme.palette.background.paper, border: `1px solid ${theme.palette.divider}` }}>
//         <Box sx={{ overflowX: "auto", width: "100%", msOverflowStyle: "none", scrollbarWidth: "none", "&::-webkit-scrollbar": { display: "none" }, background: `linear-gradient(to right, ${theme.palette.background.paper} 0%, transparent 10%, transparent 90%, ${theme.palette.background.paper} 100%)` }}>
//           <Box sx={{ width: `${chartData.width}px`, transition: 'width 0.3s ease-in-out', minWidth: '100%' }}>
//             <Chart 
//               options={chartData.options}
//               series={chartData.series}
//               // type="line"
//               // type="area"
//               // type="bar"
//               // type="histogram"
//               // type="pie"
//               // type="donut"
//               // type="radialBar"
//               // type="scatter"
//               // type="bubble"
//               // type="heatmap"
//               // type="treemap"
//               // type="candlestick"
//               // type="boxPlot"
//               // type="radar"
//               // type="polarArea"
//               // type="rangeBar"
//              height={550}
//              width={chartData.width}
//             />
//           </Box>
//         </Box>
//       </Paper>

//       <Box sx={{ textAlign: 'center', mt: 3, mb: 2 }}>
//         <Typography variant="caption" color="text.secondary">• Hover over points for detailed information • Scroll horizontally to explore full dataset •</Typography>
//       </Box>
//     </Box>
//   );
// }































// "use client";

// import React, { useState, useMemo, useEffect } from "react";
// import dynamic from "next/dynamic";
// import {
//   Box, Paper, Typography, Card, CardContent, IconButton,
//   Chip, Stack, useTheme, Skeleton, Fade, Slide, Grow, Zoom
// } from "@mui/material";
// import { Refresh, ZoomIn, ZoomOut, FilterList } from "@mui/icons-material";
// import Layout from "../component/Layout";

// const Chart = dynamic(() => import("react-apexcharts"), { ssr: false });

// export default function EnhancedChart() {
//   const theme = useTheme();
//   const dataLength = 50;
//   const visiblePoints = 19;

//   // zoom / refresh state (refreshKey triggers regeneration)
//   const [zoomLevel, setZoomLevel] = useState(1);
//   const [refreshKey, setRefreshKey] = useState(0);

//   // CLIENT-ONLY data state: start as `null` so server and initial client render match
//   const [clientData, setClientData] = useState(null);
//   const [isLoading, setIsLoading] = useState(false);

//   // Generate data on the client only (runs on mount and when refreshKey changes)
//   useEffect(() => {
//     setIsLoading(true);
//     // Add a slight delay to show loading transitions
//     const timer = setTimeout(() => {
//       const newData = Array.from({ length: dataLength }, () => Math.floor(Math.random() * 100 + 1));
//       setClientData(newData);
//       setIsLoading(false);
//     }, 300);

//     return () => clearTimeout(timer);
//   }, [refreshKey, dataLength]);

//   // Build chart config from clientData. If data is null show placeholders / empty series.
//   const chartData = useMemo(() => {
//     if (!clientData) {
//       // initial placeholder config (no data yet)
//       return {
//         series: [{ name: "Sales", data: [] }],
//         stats: { max: "—", min: "—", avg: "—" },
//         options: {
//           chart: { 
//             height: 450, 
//             type: "line", 
//             toolbar: { show: false }, 
//             zoom: { enabled: false }, 
//             animations: { enabled: true, easing: 'easeinout', speed: 1200 }, 
//             foreColor: theme.palette.text.secondary 
//           },
//           stroke: { curve: "smooth", width: 3, colors: [theme.palette.primary.main] },
//           fill: { 
//             type: "gradient", 
//             gradient: { 
//               shade: "dark", 
//               type: "vertical", 
//               shadeIntensity: 0.5, 
//               gradientToColors: [theme.palette.primary.light], 
//               inverseColors: false, 
//               opacityFrom: 0.3, 
//               opacityTo: 0.1 
//             } 
//           },
//           grid: { 
//             borderColor: theme.palette.divider, 
//             strokeDashArray: 3, 
//             row: { colors: ["transparent", "transparent"], opacity: 0.2 }, 
//             column: { colors: ["transparent", "transparent"], opacity: 0.2 }, 
//             padding: { top: 10, right: 20, bottom: 10, left: 20 } 
//           },
//           xaxis: { 
//             categories: Array.from({ length: dataLength }, (_, i) => `Day ${i + 1}`), 
//             labels: { rotate: -45, style: { fontSize: "11px", colors: theme.palette.text.secondary } }, 
//             tickAmount: visiblePoints, 
//             min: 0, 
//             max: visiblePoints - 1, 
//             axisBorder: { show: true, color: theme.palette.divider } 
//           },
//           yaxis: { 
//             title: { text: "Sales Units", style: { color: theme.palette.text.secondary } }, 
//             labels: { style: { colors: theme.palette.text.secondary } } 
//           },
//           title: { 
//             text: "Sales Performance Analytics", 
//             align: "left", 
//             style: { fontSize: "20px", fontWeight: "600", color: theme.palette.text.primary }, 
//             margin: 20 
//           },
//         },
//         width: dataLength * 60 * zoomLevel,
//       };
//     }

//     // when we have clientData, compute stats normally
//     const data = clientData;
//     const maxValue = Math.max(...data);
//     console.log("max values", maxValue);
    
//     const minValue = Math.min(...data);
//     console.log("min values", minValue);
    
//     const avgValue = Math.round(data.reduce((a, b) => a + b, 0) / data.length);
//     console.log("the values of sales data",data);
    

//     return {
//       series: [{ name: "Sales", data }],
//       stats: { max: maxValue, min: minValue, avg: avgValue },
//       options: {
//         chart: { 
//           height: 450, 
//           type: "line", 
//           toolbar: { show: false }, 
//           zoom: { enabled: false }, 
//           animations: { 
//             enabled: true, 
//             easing: 'easeinout', 
//             speed: 1200,
//             animateGradually: {
//               enabled: true,
//               delay: 150
//             },
//             dynamicAnimation: {
//               enabled: true,
//               speed: 800
//             }
//           }, 
//           foreColor: theme.palette.text.secondary 
//         },
//         stroke: { curve: "smooth", width: 3, colors: [theme.palette.primary.main] },
//         fill: { 
//           type: "gradient", 
//           gradient: { 
//             shade: "dark", 
//             type: "vertical", 
//             shadeIntensity: 0.5, 
//             gradientToColors: [theme.palette.primary.light], 
//             inverseColors: false, 
//             opacityFrom: 0.3, 
//             opacityTo: 0.1 
//           } 
//         },
//         grid: { 
//           borderColor: theme.palette.divider, 
//           strokeDashArray: 3, 
//           row: { colors: ["transparent", "transparent"], opacity: 0.2 }, 
//           column: { colors: ["transparent", "transparent"], opacity: 0.2 }, 
//           padding: { top: 10, right: 20, bottom: 10, left: 20 } 
//         },
//         xaxis: { 
//           categories: Array.from({ length: dataLength }, (_, i) => `Day ${i + 1}`), 
//           labels: { rotate: -45, style: { fontSize: "11px", colors: theme.palette.text.secondary } }, 
//           tickAmount: visiblePoints, 
//           min: 0, 
//           max: visiblePoints - 1, 
//           axisBorder: { show: true, color: theme.palette.divider } 
//         },
//         yaxis: { 
//           title: { text: "Sales Units", style: { color: theme.palette.text.secondary } }, 
//           labels: { style: { colors: theme.palette.text.secondary } } 
//         },
//         title: { 
//           text: "Sales Performance Analytics", 
//           align: "left", 
//           style: { fontSize: "20px", fontWeight: "600", color: theme.palette.text.primary }, 
//           margin: 20 
//         },
//         dataLabels: { enabled: false },
//         tooltip: { 
//           enabled: true, 
//           theme: theme.palette.mode, 
//           style: { fontSize: '12px' }, 
//           x: { show: true, format: 'dd MMM yyyy' } 
//         },
//         markers: { 
//           size: 4, 
//           strokeColors: theme.palette.primary.main, 
//           strokeWidth: 2, 
//           hover: { size: 6 } 
//         },
//       },
//       width: dataLength * 60 * zoomLevel,
//     };
//   }, [clientData, zoomLevel, theme, dataLength, visiblePoints]);

//   // Handlers with smooth state transitions
//   const handleRefresh = () => {
//     setRefreshKey(prev => prev + 1);
//   };
  
//   const handleZoomIn = () => setZoomLevel(prev => Math.min(prev + 0.25, 2));
//   const handleZoomOut = () => setZoomLevel(prev => Math.max(prev - 0.25, 0.5));

//   return (
//     <Layout>
//         <Box sx={{ 
//       minHeight: "100vh", 
//       background: `linear-gradient(135deg, ${theme.palette.background.default} 0%, ${theme.palette.background.paper} 100%)`, 
//       p: { xs: 1, sm: 3 },
//       transition: 'all 0.5s ease-in-out'
//     }}>
      
//       {/* Header with enhanced animations */}
//       <Fade in timeout={800}>
//         <Box sx={{ 
//           display: "flex", 
//           justifyContent: "center", 
//           alignItems: "center", 
//           minHeight: "280px", 
//           background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`, 
//           borderRadius: 3, 
//           mb: 4, 
//           p: 3, 
//           position: 'relative', 
//           overflow: 'hidden',
//           transition: 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)',
//           transform: 'translateY(0)',
//           '&:hover': {
//             transform: 'translateY(-2px)',
//             boxShadow: theme.shadows[12],
//           },
//           '&::before': { 
//             content: '""', 
//             position: 'absolute', 
//             top: 0, 
//             left: 0, 
//             right: 0, 
//             bottom: 0, 
//             background: 'radial-gradient(circle at top right, rgba(255,255,255,0.1) 0%, transparent 50%)',
//             transition: 'opacity 0.3s ease'
//           }
//         }}>
//           <Zoom in timeout={1000}>
//             <Paper elevation={8} sx={{ 
//               p: 4, 
//               width: "100%", 
//               maxWidth: 800, 
//               textAlign: "center", 
//               borderRadius: 4, 
//               background: 'rgba(255, 255, 255, 0.95)', 
//               backdropFilter: 'blur(10px)', 
//               border: '1px solid rgba(255, 255, 255, 0.2)',
//               transition: 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)',
//               '&:hover': {
//                 transform: 'scale(1.01)',
//                 background: 'rgba(255, 255, 255, 0.98)',
//               }
//             }}>
//               <Slide direction="down" in timeout={1200}>
//                 <Typography variant="h4" gutterBottom sx={{ 
//                   fontWeight: "700", 
//                   background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`, 
//                   backgroundClip: 'text', 
//                   WebkitBackgroundClip: 'text', 
//                   color: 'transparent', 
//                   mb: 2,
//                   transition: 'all 0.3s ease'
//                 }}>
//                   Advanced Analytics Dashboard
//                 </Typography>
//               </Slide>
              
//               <Slide direction="up" in timeout={1400}>
//                 <Typography variant="h6" color="text.secondary" sx={{ 
//                   mb: 3,
//                   transition: 'all 0.3s ease',
//                   '&:hover': {
//                     color: theme.palette.text.primary
//                   }
//                 }}>
//                   Real-time Sales Performance Metrics & Insights
//                 </Typography>
//               </Slide>

//               <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} justifyContent="center">
//                 {[
//                   { 
//                     label: 'Peak Sales', 
//                     value: clientData ? chartData.stats.max : null, 
//                     color: 'success',
//                     delay: 1600 
//                   },
//                   { 
//                     label: 'Average', 
//                     value: clientData ? chartData.stats.avg : null, 
//                     color: 'info',
//                     delay: 1800 
//                   },
//                   { 
//                     label: 'Lowest', 
//                     value: clientData ? chartData.stats.min : null, 
//                     color: 'warning',
//                     delay: 2000 
//                   }
//                 ].map((stat, index) => (
//                   <Grow key={stat.label} in timeout={stat.delay}>
//                     <Card sx={{ 
//                       minWidth: 120, 
//                       background: theme.palette[stat.color].light,
//                       transition: 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)',
//                       cursor: 'pointer',
//                       '&:hover': {
//                         transform: 'translateY(-4px) scale(1.05)',
//                         boxShadow: theme.shadows[8],
//                         background: theme.palette[stat.color].main,
//                       }
//                     }}>
//                       <CardContent sx={{ textAlign: 'center', p: 2 }}>
//                         {stat.value !== null && !isLoading ? (
//                           <Fade in timeout={300}>
//                             <Typography variant="h6" color={`${stat.color}.dark`} sx={{
//                               transition: 'all 0.3s ease',
//                               fontWeight: 'bold'
//                             }}>
//                               {stat.value}
//                             </Typography>
//                           </Fade>
//                         ) : (
//                           <Skeleton variant="text" width={60} animation="wave" />
//                         )}
//                         <Typography variant="caption" color={`${stat.color}.dark`} sx={{
//                           transition: 'all 0.3s ease',
//                           fontWeight: 500
//                         }}>
//                           {stat.label}
//                         </Typography>
//                       </CardContent>
//                     </Card>
//                   </Grow>
//                 ))}
//               </Stack>
//             </Paper>
//           </Zoom>
//         </Box>
//       </Fade>

//       {/* Controls with smooth transitions */}
//       <Slide direction="up" in timeout={600}>
//         <Paper elevation={2} sx={{ 
//           p: 2, 
//           mb: 3, 
//           borderRadius: 3,
//           transition: 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)',
//           '&:hover': {
//             elevation: 4,
//             boxShadow: theme.shadows[4],
//           }
//         }}>
//           <Box sx={{ 
//             display: 'flex', 
//             justifyContent: 'space-between', 
//             alignItems: 'center', 
//             flexWrap: 'wrap', 
//             gap: 2 
//           }}>
//             <Typography variant="h6" sx={{ 
//               fontWeight: 600,
//               transition: 'color 0.3s ease',
//               '&:hover': {
//                 color: theme.palette.primary.main
//               }
//             }}>
//               Sales Trend Analysis
//             </Typography>
            
//             <Stack direction="row" spacing={1} alignItems="center">
//               <Chip 
//                 icon={<FilterList />} 
//                 label="Last 100 Days" 
//                 variant="outlined" 
//                 size="small" 
//                 sx={{
//                   transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
//                   '&:hover': {
//                     backgroundColor: theme.palette.primary.light,
//                     color: theme.palette.primary.contrastText,
//                     transform: 'scale(1.05)'
//                   }
//                 }}
//               />
              
//               <IconButton 
//                 onClick={handleZoomOut} 
//                 size="small" 
//                 color="primary"
//                 sx={{
//                   transition: 'all 0.2s ease',
//                   '&:hover': {
//                     transform: 'scale(1.1) rotate(-5deg)',
//                     backgroundColor: theme.palette.primary.light,
//                   }
//                 }}
//               >
//                 <ZoomOut />
//               </IconButton>
              
//               <Typography variant="body2" sx={{ 
//                 minWidth: 60, 
//                 textAlign: 'center',
//                 transition: 'all 0.3s ease',
//                 fontWeight: 600,
//                 color: theme.palette.primary.main
//               }}>
//                 {Math.round(zoomLevel * 100)}%
//               </Typography>
              
//               <IconButton 
//                 onClick={handleZoomIn} 
//                 size="small" 
//                 color="primary"
//                 sx={{
//                   transition: 'all 0.2s ease',
//                   '&:hover': {
//                     transform: 'scale(1.1) rotate(5deg)',
//                     backgroundColor: theme.palette.primary.light,
//                   }
//                 }}
//               >
//                 <ZoomIn />
//               </IconButton>
              
//               <IconButton 
//                 onClick={handleRefresh} 
//                 size="small" 
//                 color="primary"
//                 disabled={isLoading}
//                 sx={{
//                   transition: 'all 0.2s ease',
//                   '&:hover': {
//                     transform: 'scale(1.1)',
//                     backgroundColor: theme.palette.secondary.light,
//                   },
//                   '&:active': {
//                     transform: 'scale(0.95) rotate(180deg)',
//                   },
//                   ...(isLoading && {
//                     animation: 'spin 1s linear infinite',
//                   }),
//                   '@keyframes spin': {
//                     '0%': {
//                       transform: 'rotate(0deg)',
//                     },
//                     '100%': {
//                       transform: 'rotate(360deg)',
//                     },
//                   },
//                 }}
//               >
//                 <Refresh />
//               </IconButton>
//             </Stack>
//           </Box>
//         </Paper>
//       </Slide>

//       {/* Chart with enhanced transitions */}
//       {/* <Fade in timeout={1000}>
//         <Paper elevation={4} sx={{ 
//           borderRadius: 3, 
//           overflow: 'hidden', 
//           background: theme.palette.background.paper, 
//           border: `1px solid ${theme.palette.divider}`,
//           transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',
//           '&:hover': {
//             boxShadow: theme.shadows[8],
//             transform: 'translateY(-1px)',
//           }
//         }}>
//           <Box sx={{ 
//             overflowX: "auto", 
//             width: "100%", 
//             msOverflowStyle: "none", 
//             scrollbarWidth: "none", 
//             "&::-webkit-scrollbar": { display: "none" }, 
//             background: `linear-gradient(to right, ${theme.palette.background.paper} 0%, transparent 10%, transparent 90%, ${theme.palette.background.paper} 100%)`,
//             transition: 'all 0.3s ease'
//           }}>
//             <Box sx={{ 
//               width: `${chartData.width}px`, 
//               transition: 'width 0.5s cubic-bezier(0.4, 0, 0.2, 1)', 
//               minWidth: '100%',
//               opacity: isLoading ? 0.6 : 1,
//             }}>
//               <Chart 
//                 options={chartData.options}
//                 series={chartData.series}
//                 height={550}
//                 width={chartData.width}
//               />
//             </Box>
//           </Box>
//         </Paper>
//       </Fade> */}


//       {/* Chart with enhanced transitions */}
//       <Fade in timeout={1000}>
//         <Paper elevation={4} sx={{ 
//           borderRadius: 3, 
//           overflow: 'hidden', 
//           background: theme.palette.background.paper, 
//           border: `1px solid ${theme.palette.divider}`,
//           transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',
//           '&:hover': {
//             boxShadow: theme.shadows[8],
//             transform: 'translateY(-1px)',
//           }
//         }}>
//           <Box sx={{ overflowX: "auto", width: "100%", msOverflowStyle: "none", scrollbarWidth: "none", "&::-webkit-scrollbar": { display: "none" } }}>
//             <Box sx={{ width: `${chartData.width}px`, minWidth: '100%' }}>
              
//               {/* Line Chart */}
//               <Typography variant="h6" sx={{ p: 2 }}>Line Chart</Typography>
//               <Chart
//                 options={chartData.options}
//                 series={chartData.series}
//                 type="line"
//                 height={450}
//                 width={chartData.width}
//               />

//               {/* Bar Chart */}
//               {/* <Typography variant="h6" sx={{ p: 2 }}>Bar Chart</Typography>
//               <Chart
//                 options={chartData.options}
//                 series={chartData.series}
//                 type="bar"
//                 height={450}
//                 width={chartData.width}
//               /> */}

//             </Box>
//           </Box>
//         </Paper>
//       </Fade>


//       {/* Footer with smooth entrance */}
//       <Slide direction="up" in timeout={1200}>
//         <Box sx={{ textAlign: 'center', mt: 3, mb: 2 }}>
//           <Typography variant="caption" color="text.secondary" sx={{
//             transition: 'all 0.3s ease',
//             '&:hover': {
//               color: theme.palette.text.primary,
//               transform: 'scale(1.02)'
//             }
//           }}>
//             • Hover over points for detailed information • Scroll horizontally to explore full dataset •
//           </Typography>
//         </Box>
//       </Slide>
//     </Box>
//     </Layout>
  
//   );
// }











// "use client";

// import React, { useState, useMemo, useEffect } from "react";
// import dynamic from "next/dynamic";
// import {
//   Box, Paper, Typography, Card, CardContent, IconButton,
//   Chip, Stack, useTheme, Skeleton, Fade, Slide, Grow, Zoom,
//   LinearProgress, Avatar, Tooltip, Badge, Divider, ButtonGroup,
//   Switch, FormControlLabel, Accordion, AccordionSummary, AccordionDetails
// } from "@mui/material";
// import {
//   Refresh, ZoomIn, ZoomOut, FilterList, TrendingUp, TrendingDown,
//   Analytics, Timeline, BarChart, ShowChart, PieChart, Assessment,
//   Speed, Insights, DataUsage, ExpandMore, Settings, Fullscreen,
//   GetApp, Share, Notifications, Star, BookmarkBorder
// } from "@mui/icons-material";

// const Chart = dynamic(() => import("react-apexcharts"), { ssr: false });

// export default function EnhancedChart() {
//   const theme = useTheme();
//   const dataLength = 100;
//   const visiblePoints = 50;

//   // Enhanced state management
//   const [zoomLevel, setZoomLevel] = useState(1);
//   const [refreshKey, setRefreshKey] = useState(0);
//   const [clientData, setClientData] = useState(null);
//   const [isLoading, setIsLoading] = useState(false);
//   const [chartType, setChartType] = useState("line");
//   const [showDataLabels, setShowDataLabels] = useState(false);
//   const [animationsEnabled, setAnimationsEnabled] = useState(true);
//   const [isDarkMode, setIsDarkMode] = useState(theme.palette.mode === 'dark');

//   // Generate enhanced data with trends
//   useEffect(() => {
//     setIsLoading(true);
//     const timer = setTimeout(() => {
//       const baseValue = 100;
//       const newData = Array.from({ length: dataLength }, (_, i) => {
//         const trend = Math.sin(i / 10) * 30;
//         const randomVariation = (Math.random() - 0.5) * 40;
//         const seasonality = Math.cos(i / 25) * 20;
//         return Math.max(10, Math.floor(baseValue + trend + randomVariation + seasonality));
//       });
//       setClientData(newData);
//       setIsLoading(false);
//     }, 500);

//     return () => clearTimeout(timer);
//   }, [refreshKey, dataLength]);

//   // Enhanced chart configuration
//   const chartData = useMemo(() => {
//     if (!clientData) {
//       return {
//         series: [{ name: "Sales", data: [] }],
//         stats: { max: "—", min: "—", avg: "—", trend: "—", growth: "—" },
//         options: {},
//         width: dataLength * 60 * zoomLevel,
//       };
//     }

//     const data = clientData;
//     const maxValue = Math.max(...data);
//     const minValue = Math.min(...data);
//     const avgValue = Math.round(data.reduce((a, b) => a + b, 0) / data.length);
//     // const recentGrowth = ((data[data.length - 1] - data[0]) / data[0] * 100).toFixed(1);
//     // const trend = recentGrowth > 0 ? "up" : "down";

//     const baseOptions = {
//       chart: {
//         height: 450,
//         type: chartType,
//         toolbar: { show: false },
//         zoom: { enabled: false },
//         animations: {
//           enabled: animationsEnabled,
//           easing: 'easeinout',
//           speed: 1000,
//           animateGradually: { enabled: true, delay: 100 },
//           dynamicAnimation: { enabled: true, speed: 600 }
//         },
//         foreColor: theme.palette.text.secondary,
//         background: 'transparent',
//         dropShadow: {
//           enabled: true,
//           color: theme.palette.primary.main,
//           top: 0,
//           left: 0,
//           blur: 3,
//           opacity: 0.1
//         }
//       },
//       stroke: {
//         curve: "smooth",
//         width: chartType === 'line' ? 4 : 2,
//         colors: [theme.palette.primary.main, theme.palette.secondary.main]
//       },
//       fill: {
//         type: chartType === 'area' ? "gradient" : "solid",
//         gradient: {
//           shade: theme.palette.mode,
//           type: "vertical",
//           shadeIntensity: 0.4,
//           gradientToColors: [theme.palette.primary.light],
//           inverseColors: false,
//           opacityFrom: 0.8,
//           opacityTo: 0.1,
//           stops: [0, 50, 100]
//         },
//         colors: [theme.palette.primary.main, theme.palette.secondary.main]
//       },
//       grid: {
//         borderColor: theme.palette.divider,
//         strokeDashArray: 2,
//         padding: { top: 20, right: 30, bottom: 20, left: 30 },
//         xaxis: { lines: { show: true } },
//         yaxis: { lines: { show: true } }
//       },
//       xaxis: {
//         categories: Array.from({ length: dataLength }, (_, i) => `Day ${i + 1}`),
//         labels: {
//           rotate: -45,
//           style: { fontSize: "10px", colors: theme.palette.text.secondary }
//         },
//         tickAmount: visiblePoints,
//         min: 0,
//         max: visiblePoints - 1,
//         axisBorder: { show: true, color: theme.palette.divider }
//       },
//       yaxis: {
//         title: {
//           text: "Sales Performance",
//           style: { color: theme.palette.text.secondary, fontSize: '14px', fontWeight: 600 }
//         },
//         labels: {
//           style: { colors: theme.palette.text.secondary },
//           formatter: (value) => `${value}K`
//         }
//       },
//       title: {
//         text: "Advanced Sales Analytics Dashboard",
//         align: "left",
//         style: {
//           fontSize: "18px",
//           fontWeight: "700",
//           color: theme.palette.text.primary
//         },
//         margin: 25
//       },
//       subtitle: {
//         text: `Tracking ${dataLength} days of performance data`,
//         align: "left",
//         style: {
//           fontSize: "12px",
//           color: theme.palette.text.secondary
//         }
//       },
//       dataLabels: { enabled: showDataLabels },
//       tooltip: {
//         enabled: true,
//         theme: theme.palette.mode,
//         style: { fontSize: '12px' },
//         x: { show: true },
//         y: {
//           formatter: (value) => `${value} units`,
//           title: { formatter: () => "Sales: " }
//         },
//         marker: { show: true }
//       },
//       markers: {
//         size: chartType === 'line' ? 5 : 0,
//         strokeColors: theme.palette.background.paper,
//         strokeWidth: 2,
//         hover: { size: 8 }
//       },
//       legend: {
//         show: true,
//         position: 'top',
//         horizontalAlign: 'right',
//         fontSize: '12px',
//         fontWeight: 600
//       },
//       responsive: [{
//         breakpoint: 600,
//         options: {
//           chart: { height: 300 },
//           legend: { position: 'bottom' }
//         }
//       }]
//     };

//     return {
//       series: [{ name: "Sales Performance", data }],
//       // stats: { max: maxValue, min: minValue, avg: avgValue, trend, growth: recentGrowth },
//       options: baseOptions,
//       width: dataLength * 60 * zoomLevel,
//     };
//   }, [clientData, zoomLevel, theme, dataLength, visiblePoints, chartType, showDataLabels, animationsEnabled]);

//   // Enhanced handlers
//   const handleRefresh = () => setRefreshKey(prev => prev + 1);
//   const handleZoomIn = () => setZoomLevel(prev => Math.min(prev + 0.25, 3));
//   const handleZoomOut = () => setZoomLevel(prev => Math.max(prev - 0.25, 0.25));

//   const chartTypes = [
//     { type: 'line', icon: ShowChart, label: 'Line' },
//     { type: 'area', icon: Timeline, label: 'Area' },
//     { type: 'bar', icon: BarChart, label: 'Bar' }
//   ];

//   return (
//     <Box sx={{
//       minHeight: "100vh",
//       background: `linear-gradient(135deg, ${theme.palette.background.default} 0%, ${theme.palette.background.paper} 50%, ${theme.palette.primary.light}10 100%)`,
//       p: { xs: 1, sm: 2, md: 3 },
//       transition: 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)',
//       position: 'relative',
//       '&::before': {
//         content: '""',
//         position: 'absolute',
//         top: 0,
//         left: 0,
//         right: 0,
//         bottom: 0,
//         background: `radial-gradient(circle at 20% 20%, ${theme.palette.primary.main}08 0%, transparent 50%)`,
//         pointerEvents: 'none'
//       }
//     }}>

//       {/* Enhanced Header Section */}
      
//       {/* <Fade in timeout={800}>
//         <Box sx={{
//           position: 'relative',
//           background: `linear-gradient(135deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 40%, ${theme.palette.secondary.main} 100%)`,
//           borderRadius: { xs: 2, md: 4 },
//           mb: 3,
//           overflow: 'hidden',
//           '&::before': {
//             content: '""',
//             position: 'absolute',
//             top: 0,
//             left: 0,
//             right: 0,
//             bottom: 0,
//             background: 'url("data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23ffffff" fill-opacity="0.05"%3E%3Ccircle cx="30" cy="30" r="4"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")',
//           }
//         }}>
//           <Stack direction={{ xs: 'column', lg: 'row' }} spacing={3} sx={{ p: { xs: 3, md: 4 }, position: 'relative', zIndex: 1 }}>
            

//             <Box sx={{ flex: 1 }}>
//               <Stack direction="row" alignItems="center" spacing={2} mb={3}>
//                 <Zoom in timeout={1000}>
//                   <Avatar sx={{
//                     background: `linear-gradient(45deg, ${theme.palette.secondary.main}, ${theme.palette.secondary.light})`,
//                     width: 56,
//                     height: 56,
//                     boxShadow: theme.shadows[8]
//                   }}>
//                     <Analytics sx={{ fontSize: 28 }} />
//                   </Avatar>
//                 </Zoom>
                
//                 <Box>
//                   <Slide direction="right" in timeout={1200}>
//                     <Typography variant="h3" sx={{
//                       fontWeight: 800,
//                       color: 'white',
//                       mb: 0.5,
//                       textShadow: '0 2px 4px rgba(0,0,0,0.3)'
//                     }}>
//                       Analytics Hub
//                     </Typography>
//                   </Slide>
                  
//                   <Slide direction="right" in timeout={1400}>
//                     <Typography variant="h6" sx={{
//                       color: 'rgba(255,255,255,0.9)',
//                       fontWeight: 400
//                     }}>
//                       Advanced Performance Dashboard
//                     </Typography>
//                   </Slide>
//                 </Box>

//                 <Box sx={{ ml: 'auto', display: { xs: 'none', sm: 'flex' } }}>
//                   <Stack direction="row" spacing={1}>
//                     {[Notifications, Star, BookmarkBorder].map((Icon, i) => (
//                       <Tooltip key={i} title={['Notifications', 'Favorites', 'Bookmarks'][i]}>
//                         <IconButton sx={{
//                           color: 'white',
//                           background: 'rgba(255,255,255,0.1)',
//                           backdropFilter: 'blur(10px)',
//                           '&:hover': {
//                             background: 'rgba(255,255,255,0.2)',
//                             transform: 'scale(1.1)'
//                           }
//                         }}>
//                           <Badge badgeContent={i === 0 ? 3 : 0} color="error">
//                             <Icon />
//                           </Badge>
//                         </IconButton>
//                       </Tooltip>
//                     ))}
//                   </Stack>
//                 </Box>
//               </Stack>

//               <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>
//                 {[
//                   {
//                     label: 'Peak Performance',
//                     value: clientData ? chartData.stats.max : null,
//                     icon: TrendingUp,
//                     color: 'success',
//                     delay: 1600
//                   },
//                   {
//                     label: 'Average Sales',
//                     value: clientData ? chartData.stats.avg : null,
//                     icon: Speed,
//                     color: 'info',
//                     delay: 1800
//                   },
//                   {
//                     label: 'Growth Rate',
//                     value: clientData ? `${chartData.stats.growth}%` : null,
//                     icon: chartData.stats?.trend === 'up' ? TrendingUp : TrendingDown,
//                     color: chartData.stats?.trend === 'up' ? 'success' : 'warning',
//                     delay: 2000
//                   },
//                   {
//                     label: 'Data Points',
//                     value: dataLength,
//                     icon: DataUsage,
//                     color: 'primary',
//                     delay: 2200
//                   }
//                 ].map((stat, index) => (
//                   <Grow key={stat.label} in timeout={stat.delay}>
//                     <Card sx={{
//                       background: 'rgba(255,255,255,0.95)',
//                       backdropFilter: 'blur(20px)',
//                       border: '1px solid rgba(255,255,255,0.2)',
//                       borderRadius: 3,
//                       flex: 1,
//                       transition: 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)',
//                       cursor: 'pointer',
//                       '&:hover': {
//                         transform: 'translateY(-8px) scale(1.02)',
//                         boxShadow: theme.shadows[12],
//                         background: 'rgba(255,255,255,1)',
//                       }
//                     }}>
//                       <CardContent sx={{ p: 2.5, textAlign: 'center' }}>
//                         <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 1 }}>
//                           <Avatar sx={{
//                             background: `linear-gradient(45deg, ${theme.palette[stat.color].main}, ${theme.palette[stat.color].light})`,
//                             width: 40,
//                             height: 40,
//                             mr: 1.5
//                           }}>
//                             <stat.icon sx={{ fontSize: 20 }} />
//                           </Avatar>
                          
//                           {stat.value !== null && !isLoading ? (
//                             <Typography variant="h5" sx={{
//                               fontWeight: 700,
//                               color: theme.palette[stat.color].main,
//                               textShadow: '0 1px 2px rgba(0,0,0,0.1)'
//                             }}>
//                               {stat.value}
//                             </Typography>
//                           ) : (
//                             <Skeleton variant="text" width={60} height={32} animation="wave" />
//                           )}
//                         </Box>
                        
//                         <Typography variant="caption" sx={{
//                           color: theme.palette.text.secondary,
//                           fontWeight: 600,
//                           textTransform: 'uppercase',
//                           letterSpacing: '0.5px'
//                         }}>
//                           {stat.label}
//                         </Typography>
//                       </CardContent>
//                     </Card>
//                   </Grow>
//                 ))}
//               </Stack>
//             </Box>
//           </Stack>
//         </Box>
//       </Fade> */}

//       {/* Enhanced Control Panel */}
//       <Slide direction="up" in timeout={600}>
//         <Paper elevation={6} sx={{
//           p: 3,
//           mb: 3,
//           borderRadius: 4,
//           background: `linear-gradient(145deg, ${theme.palette.background.paper}, ${theme.palette.background.default})`,
//           border: `1px solid ${theme.palette.divider}`,
//           backdropFilter: 'blur(10px)',
//           transition: 'all 0.4s ease'
//         }}>
//           <Stack direction={{ xs: 'column', md: 'row' }} spacing={3} alignItems="center">
            
            
//             <Box sx={{ flex: 1 }}>
//               <Stack direction="row" spacing={2} alignItems="center" flexWrap="wrap">
//                 <Typography variant="h6" sx={{
//                   fontWeight: 700,
//                   background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,
//                   backgroundClip: 'text',
//                   WebkitBackgroundClip: 'text',
//                   color: 'transparent'
//                 }}>
//                   Chart Configuration
//                 </Typography>
                
//                 <Divider orientation="vertical" flexItem />
                
//                 <ButtonGroup size="small" variant="outlined">
//                   {chartTypes.map(({ type, icon: Icon, label }) => (
//                     <Tooltip key={type} title={`${label} Chart`}>
//                       <IconButton
//                         onClick={() => setChartType(type)}
//                         color={chartType === type ? 'primary' : 'default'}
//                         sx={{
//                           transition: 'all 0.2s ease',
//                           ...(chartType === type && {
//                             background: theme.palette.primary.main,
//                             color: 'white',
//                             '&:hover': {
//                               background: theme.palette.primary.dark,
//                             }
//                           })
//                         }}
//                       >
//                         <Icon fontSize="small" />
//                       </IconButton>
//                     </Tooltip>
//                   ))}
//                 </ButtonGroup>
//               </Stack>
//             </Box>

//             <Stack direction="row" spacing={2} alignItems="center" flexWrap="wrap">
//               <Chip
//                 icon={<Assessment />}
//                 label={`${dataLength} Data Points`}
//                 variant="filled"
//                 color="primary"
//                 sx={{
//                   fontWeight: 600,
//                   '&:hover': { transform: 'scale(1.05)' }
//                 }}
//               />

//               <Tooltip title="Toggle Data Labels">
//                 <FormControlLabel
//                   control={
//                     <Switch
//                       checked={showDataLabels}
//                       onChange={(e) => setShowDataLabels(e.target.checked)}
//                       color="primary"
//                     />
//                   }
//                   label="Labels"
//                   sx={{ m: 0 }}
//                 />
//               </Tooltip>

//               <Stack direction="row" spacing={0.5} alignItems="center">
//                 <IconButton onClick={handleZoomOut} size="small" color="primary">
//                   <ZoomOut />
//                 </IconButton>
//                 <Typography variant="body2" sx={{ minWidth: 50, textAlign: 'center', fontWeight: 600 }}>
//                   {Math.round(zoomLevel * 100)}%
//                 </Typography>
//                 <IconButton onClick={handleZoomIn} size="small" color="primary">
//                   <ZoomIn />
//                 </IconButton>
//               </Stack>

            
//               <Stack direction="row" spacing={1}>
//                 {[
//                   { icon: Refresh, action: handleRefresh, tooltip: 'Refresh Data', loading: isLoading },
//                   { icon: GetApp, action: () => {}, tooltip: 'Export Data' },
//                   { icon: Share, action: () => {}, tooltip: 'Share Chart' },
//                   { icon: Fullscreen, action: () => {}, tooltip: 'Fullscreen' }
//                 ].map(({ icon: Icon, action, tooltip, loading }) => (
//                   <Tooltip key={tooltip} title={tooltip}>
//                     <IconButton
//                       onClick={action}
//                       disabled={loading}
//                       sx={{
//                         background: theme.palette.primary.light + '20',
//                         transition: 'all 0.2s ease',
//                         '&:hover': {
//                           background: theme.palette.primary.main,
//                           color: 'white',
//                           transform: 'scale(1.1)'
//                         },
//                         ...(loading && {
//                           animation: 'pulse 1.5s ease-in-out infinite'
//                         })
//                       }}
//                     >
//                       <Icon fontSize="small" />
//                     </IconButton>
//                   </Tooltip>
//                 ))}
//               </Stack>
//             </Stack>
//           </Stack>

          
//           {isLoading && (
//             <Box sx={{ mt: 2 }}>
//               <LinearProgress
//                 variant="indeterminate"
//                 sx={{
//                   borderRadius: 1,
//                   height: 4,
//                   background: theme.palette.primary.light + '30'
//                 }}
//               />
//             </Box>
//           )}
//         </Paper>
//       </Slide>

//       {/* Enhanced Chart Container */}
//       <Fade in timeout={1000}>
//         <Paper elevation={8} sx={{
//           borderRadius: 4,
//           overflow: 'hidden',
//           background: `linear-gradient(145deg, ${theme.palette.background.paper}, ${theme.palette.background.default}05)`,
//           border: `1px solid ${theme.palette.divider}`,
//           backdropFilter: 'blur(20px)',
//           boxShadow: `0 20px 40px -12px ${theme.palette.primary.main}20`,
//           transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',
//           position: 'relative',
//           '&:hover': {
//             boxShadow: `0 25px 50px -12px ${theme.palette.primary.main}30`,
//             transform: 'translateY(-2px)'
//           }
//         }}>
          
//           {/* Chart Header */}
//           <Box sx={{
//             p: 2,
//             background: `linear-gradient(90deg, ${theme.palette.primary.main}10, ${theme.palette.secondary.main}10)`,
//             borderBottom: `1px solid ${theme.palette.divider}`
//           }}>
//             <Stack direction="row" justifyContent="space-between" alignItems="center">
//               <Typography variant="h6" sx={{ fontWeight: 600 }}>
//                 Performance Visualization
//               </Typography>
//               <Chip
//                 label={chartType.toUpperCase()}
//                 size="small"
//                 color="primary"
//                 variant="outlined"
//               />
//             </Stack>
//           </Box>

//           <Box sx={{
//             overflowX: "auto",
//             width: "100%",
//             scrollbarWidth: "thin",
//             scrollbarColor: `${theme.palette.primary.main} ${theme.palette.background.paper}`,
//             '&::-webkit-scrollbar': {
//               height: 6,
//             },
//             '&::-webkit-scrollbar-track': {
//               background: theme.palette.background.default,
//             },
//             '&::-webkit-scrollbar-thumb': {
//               background: theme.palette.primary.main,
//               borderRadius: 4,
//             }
//           }}>
//             <Box sx={{
//               width: `${chartData.width}px`,
//               // transition: 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)',
//               minWidth: '100%',
//               opacity: isLoading ? 0.7 : 1,
//               filter: isLoading ? 'blur(1px)' : 'none',
//               position: 'relative'
//             }}>
//               <Chart
//                 options={chartData.options}
//                 series={chartData.series}
//                 type={chartType}
//                 height={600}
//                 width={chartData.width}
//               />
              
//               {isLoading && (
//                 <Box sx={{
//                   position: 'absolute',
//                   top: '50%',
//                   left: '50%',
//                   transform: 'translate(-50%, -50%)',
//                   background: theme.palette.background.paper + 'CC',
//                   borderRadius: 2,
//                   p: 2,
//                   backdropFilter: 'blur(10px)'
//                 }}>
//                   <Stack alignItems="center" spacing={1}>
//                     <Skeleton variant="circular" width={40} height={40} />
//                     <Typography variant="body2">Loading data...</Typography>
//                   </Stack>
//                 </Box>
//               )}
//             </Box>
//           </Box>
//         </Paper>
//       </Fade>

//       {/* Enhanced Settings Panel */}
//       {/* <Slide direction="up" in timeout={1200}>
//         <Box sx={{ mt: 3 }}>
//           <Accordion
//             sx={{
//               background: theme.palette.background.paper,
//               borderRadius: 2,
//               '&:before': { display: 'none' }
//             }}
//           >
//             <AccordionSummary expandIcon={<ExpandMore />}>
//               <Stack direction="row" alignItems="center" spacing={1}>
//                 <Settings />
//                 <Typography variant="h6">Advanced Settings</Typography>
//               </Stack>
//             </AccordionSummary>
//             <AccordionDetails>
//               <Stack direction={{ xs: 'column', md: 'row' }} spacing={3}>
//                 <FormControlLabel
//                   control={
//                     <Switch
//                       checked={animationsEnabled}
//                       onChange={(e) => setAnimationsEnabled(e.target.checked)}
//                     />
//                   }
//                   label="Enable Animations"
//                 />
//                 <FormControlLabel
//                   control={
//                     <Switch
//                       checked={showDataLabels}
//                       onChange={(e) => setShowDataLabels(e.target.checked)}
//                     />
//                   }
//                   label="Show Data Labels"
//                 />
//               </Stack>
//             </AccordionDetails>
//           </Accordion>
//         </Box>
//       </Slide> */}

//       {/* Enhanced Footer */}
//       {/* <Slide direction="up" in timeout={1400}>
//         <Box sx={{
//           textAlign: 'center',
//           mt: 4,
//           mb: 2,
//           p: 3,
//           background: `linear-gradient(90deg, transparent, ${theme.palette.primary.main}10, transparent)`,
//           borderRadius: 2
//         }}>
//           <Typography variant="body2" color="text.secondary" sx={{
//             fontStyle: 'italic',
//             transition: 'all 0.3s ease',
//             '&:hover': {
//               color: theme.palette.primary.main,
//               transform: 'scale(1.02)'
//             }
//           }}>
//             ✨ Interactive dashboard with real-time data visualization • Hover for insights • Zoom and explore ✨
//           </Typography>
//         </Box>
//       </Slide> */}
//     </Box>
//   );
// }